{"message":"unused import: `dot_structures::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":4,"byte_end":21,"line_start":1,"line_end":1,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"use dot_structures::*;","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23,"is_primary":true,"text":[{"text":"use dot_structures::*;","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `dot_structures::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse dot_structures::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":3829,"byte_end":3830,"line_start":113,"line_end":113,"column_start":88,"column_end":89,"is_primary":true,"text":[{"text":"        Edge{ ty: EdgeTy::Pair(Vertex::from($l),Vertex::from($r)), attributes: $attrs };","highlight_start":88,"highlight_end":89}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":7058,"byte_end":7117,"line_start":212,"line_end":212,"column_start":13,"column_end":72,"is_primary":false,"text":[{"text":"            edge!(node_id!(\"1\") => node_id!(\"2\"), vec![attr!(\"a\",\"b\")]),","highlight_start":13,"highlight_end":72}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"edge!","def_site_span":{"file_name":"src/lib.rs","byte_start":3305,"byte_end":4680,"line_start":101,"line_end":136,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! edge {","highlight_start":1,"highlight_end":20},{"text":"    ($l:expr => $r:expr) => {","highlight_start":1,"highlight_end":30},{"text":"        Edge{ ty: EdgeTy::Pair(Vertex::from($l),Vertex::from($r)), attributes: vec![] }","highlight_start":1,"highlight_end":88},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($l:expr => $r:expr $(=> $nexts:expr)+) => {{","highlight_start":1,"highlight_end":50},{"text":"         let mut edges_vec = vec![Vertex::from($l),Vertex::from($r)];","highlight_start":1,"highlight_end":70},{"text":"         $( edges_vec.push(Vertex::from($nexts)) ; )+","highlight_start":1,"highlight_end":54},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        Edge{ ty: EdgeTy::Chain(edges_vec), attributes: vec![] }","highlight_start":1,"highlight_end":65},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($l:expr => $r:expr, $attrs:expr) => {","highlight_start":1,"highlight_end":43},{"text":"        Edge{ ty: EdgeTy::Pair(Vertex::from($l),Vertex::from($r)), attributes: $attrs };","highlight_start":1,"highlight_end":89},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($l:expr => $r:expr; $($attrs:expr),+) => {{","highlight_start":1,"highlight_end":49},{"text":"         let mut attrs_vec = Vec::new();","highlight_start":1,"highlight_end":41},{"text":"        $( attrs_vec.push($attrs) ; )+","highlight_start":1,"highlight_end":39},{"text":"        Edge{ ty: EdgeTy::Pair(Vertex::from($l),Vertex::from($r)), attributes: attrs_vec }","highlight_start":1,"highlight_end":91},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($l:expr => $r:expr $(=> $nexts:expr)+; $($attrs:expr),+) => {{","highlight_start":1,"highlight_end":68},{"text":"         let mut attrs_vec = Vec::new();","highlight_start":1,"highlight_end":41},{"text":"         $( attrs_vec.push($attrs) ; )+","highlight_start":1,"highlight_end":40},{"text":"","highlight_start":1,"highlight_end":1},{"text":"         let mut edges_vec = vec![Vertex::from($l),Vertex::from($r)];","highlight_start":1,"highlight_end":70},{"text":"         $( edges_vec.push(Vertex::from($nexts)) ; )+","highlight_start":1,"highlight_end":54},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        Edge{ ty: EdgeTy::Chain(edges_vec), attributes: attrs_vec }","highlight_start":1,"highlight_end":68},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($l:expr => $r:expr $(=> $nexts:expr)+ , $attrs:expr) => {{","highlight_start":1,"highlight_end":64},{"text":"","highlight_start":1,"highlight_end":1},{"text":"         let mut edges_vec = vec![Vertex::from($l),Vertex::from($r)]","highlight_start":1,"highlight_end":69},{"text":"         $( edges_vec.push(Vertex::from($nexts)) ; )+","highlight_start":1,"highlight_end":54},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        Edge{ ty: EdgeTy::Chain(edges_vec), attributes: $attrs }","highlight_start":1,"highlight_end":65},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"`#[warn(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:113:88\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        Edge{ ty: EdgeTy::Pair(Vertex::from($l),Vertex::from($r)), attributes: $attrs };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m212\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            edge!(node_id!(\"1\") => node_id!(\"2\"), vec![attr!(\"a\",\"b\")]),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `edge` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"2 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 2 warnings emitted\u001b[0m\n\n"}
